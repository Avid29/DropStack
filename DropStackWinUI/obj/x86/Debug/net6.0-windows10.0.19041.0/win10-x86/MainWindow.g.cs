#pragma checksum "C:\Users\nicol\OneDrive\Documents\GitHub\dropstack\DropStackWinUI\MainWindow.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "EC68C068F17E40EC8EB167B634B03B992CA61FF3ED987B48231A2A6E20F3D67F"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DropStackWinUI
{
    partial class MainWindow : 
        global::WinUIEx.WindowEx, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TeachingTip_Target(global::Microsoft.UI.Xaml.Controls.TeachingTip obj, global::Microsoft.UI.Xaml.FrameworkElement value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.FrameworkElement) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.FrameworkElement), targetNullValue);
                }
                obj.Target = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainWindow_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IMainWindow_Bindings
        {
            private global::DropStackWinUI.MainWindow dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TeachingTip obj16;
            private global::Microsoft.UI.Xaml.Controls.TeachingTip obj17;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj23;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj16TargetDisabled = false;
            private static bool isobj17TargetDisabled = false;
            private static bool isobj23TextDisabled = false;

            public MainWindow_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 491 && columnNumber == 10)
                {
                    isobj16TargetDisabled = true;
                }
                else if (lineNumber == 500 && columnNumber == 10)
                {
                    isobj17TargetDisabled = true;
                }
                else if (lineNumber == 627 && columnNumber == 56)
                {
                    isobj23TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 16: // MainWindow.xaml line 487
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                        break;
                    case 17: // MainWindow.xaml line 496
                        this.obj17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                        break;
                    case 23: // MainWindow.xaml line 627
                        this.obj23 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMainWindow_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::DropStackWinUI.MainWindow>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_M_GetAppVersion_371857150(int phase)
            {
                global::System.String result = this.dataRoot.GetAppVersion();
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainWindow.xaml line 627
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj23, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::DropStackWinUI.MainWindow obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_RevealInExplorerButton(obj.RevealInExplorerButton, phase);
                        this.Update_M_GetAppVersion_371857150(phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_RevealInExplorerButton(global::Microsoft.UI.Xaml.Controls.AppBarButton obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainWindow.xaml line 487
                    if (!isobj16TargetDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TeachingTip_Target(this.obj16, obj, null);
                    }
                    // MainWindow.xaml line 496
                    if (!isobj17TargetDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TeachingTip_Target(this.obj17, obj, null);
                    }
                }
            }
            private void Update_M_GetAppVersion_371857150(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    if (!isobj23TextDisabled)
                    {
                        this.PendingFunctionBindings["M_GetAppVersion_371857150"] = new InvokeFunctionDelegate(this.Invoke_M_GetAppVersion_371857150); 
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // MainWindow.xaml line 18
                {
                    this.ThemeBackgroundParallaxView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ParallaxView>(target);
                }
                break;
            case 3: // MainWindow.xaml line 21
                {
                    this.WindowGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 4: // MainWindow.xaml line 26
                {
                    this.TitleBarRectangle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Rectangle>(target);
                }
                break;
            case 5: // MainWindow.xaml line 27
                {
                    this.TitleBarText = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 6: // MainWindow.xaml line 28
                {
                    this.ContentGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 7: // MainWindow.xaml line 29
                {
                    this.RegularAndPinnedFileGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 8: // MainWindow.xaml line 176
                {
                    this.FileCommandBar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CommandBar>(target);
                }
                break;
            case 9: // MainWindow.xaml line 252
                {
                    this.SearchGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 10: // MainWindow.xaml line 262
                {
                    this.fileInClipboardReminder = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                }
                break;
            case 11: // MainWindow.xaml line 268
                {
                    this.failedToDragTeachingTip = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                }
                break;
            case 12: // MainWindow.xaml line 274
                {
                    this.panosUnlockedTeachingTip = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TeachingTip)this.panosUnlockedTeachingTip).ActionButtonClick += this.panosUnlockedTeachingTip_ActionButtonClick;
                }
                break;
            case 13: // MainWindow.xaml line 281
                {
                    this.noFolderpathTechingTip = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TeachingTip)this.noFolderpathTechingTip).ActionButtonClick += this.noFolderpathTechingTip_ActionButtonClick;
                }
                break;
            case 14: // MainWindow.xaml line 290
                {
                    this.noPinnedFolderpathTechingTip = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TeachingTip)this.noPinnedFolderpathTechingTip).ActionButtonClick += this.noPinnedFolderpathTechingTip_ActionButtonClick;
                }
                break;
            case 15: // MainWindow.xaml line 299
                {
                    this.quickSettingsFlyoutTeachingTip = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TeachingTip)this.quickSettingsFlyoutTeachingTip).Closed += this.quickSettingsFlyoutTeachingTip_Closed;
                }
                break;
            case 16: // MainWindow.xaml line 487
                {
                    this.cannotOpenRegularFolderBecauseThereIsNoneTeachingTip = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TeachingTip)this.cannotOpenRegularFolderBecauseThereIsNoneTeachingTip).ActionButtonClick += this.cannotOpenRegularFolderBecauseThereIsNoneTeachingTip_ActionButtonClick;
                }
                break;
            case 17: // MainWindow.xaml line 496
                {
                    this.cannotOpenPinnedFolderBecauseThereIsNoneTeachingTip = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TeachingTip>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TeachingTip)this.cannotOpenPinnedFolderBecauseThereIsNoneTeachingTip).ActionButtonClick += this.cannotOpenPinnedFolderBecauseThereIsNoneTeachingTip_ActionButtonClick;
                }
                break;
            case 18: // MainWindow.xaml line 506
                {
                    this.OOBEgrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 19: // MainWindow.xaml line 574
                {
                    this.AboutDropStackGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 20: // MainWindow.xaml line 580
                {
                    this.AboutDropStackContentGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 21: // MainWindow.xaml line 589
                {
                    this.AboutDropStackCloseButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.AboutDropStackCloseButton).Click += this.AboutDropStackCloseButton_Click;
                }
                break;
            case 22: // MainWindow.xaml line 635
                {
                    this.PrivacyStamentExpander = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Expander>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Expander)this.PrivacyStamentExpander).Expanding += this.PrivacyStamentExpander_Expanding;
                }
                break;
            case 24: // MainWindow.xaml line 513
                {
                    this.OOBEbackgroundRectangle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Rectangle>(target);
                }
                break;
            case 25: // MainWindow.xaml line 515
                {
                    this.OOBEpivot = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Pivot>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Pivot)this.OOBEpivot).SelectionChanged += this.OOBEpivot_SelectionChanged;
                }
                break;
            case 26: // MainWindow.xaml line 569
                {
                    this.OOBEgoBackButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.OOBEgoBackButton).Click += this.OOBEgoBackButton_Click;
                }
                break;
            case 27: // MainWindow.xaml line 570
                {
                    this.OOBEgoNextButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.OOBEgoNextButton).Click += this.OOBEgoNextButton_Click;
                }
                break;
            case 28: // MainWindow.xaml line 564
                {
                    this.OOBEsimpleViewOfferCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 29: // MainWindow.xaml line 530
                {
                    this.OOBEsetupPivot = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Pivot>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Pivot)this.OOBEsetupPivot).SelectionChanged += this.OOBEsetupPivot_SelectionChanged;
                }
                break;
            case 30: // MainWindow.xaml line 551
                {
                    this.OOBEpinnedFileAccessRequestButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.OOBEpinnedFileAccessRequestButton).Click += this.OOBEpinnedFileAccessRequestButton_Click;
                }
                break;
            case 31: // MainWindow.xaml line 539
                {
                    this.OOBEportalFileAccessRequestButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.OOBEportalFileAccessRequestButton).Click += this.OOBEportalFileAccessRequestButton_Click;
                }
                break;
            case 32: // MainWindow.xaml line 304
                {
                    this.AppearanceAndBehaviorExpander = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Expander>(target);
                }
                break;
            case 33: // MainWindow.xaml line 355
                {
                    this.PerformanceSettingsExpander = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Expander>(target);
                }
                break;
            case 34: // MainWindow.xaml line 400
                {
                    this.SecondaryFolderSettingsExpander = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Expander>(target);
                }
                break;
            case 35: // MainWindow.xaml line 431
                {
                    this.ExpanderSettingsExpander = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Expander>(target);
                }
                break;
            case 36: // MainWindow.xaml line 442
                {
                    this.deleteFolderCookieButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 37: // MainWindow.xaml line 450
                {
                    global::Microsoft.UI.Xaml.Controls.Flyout element37 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Flyout>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Flyout)element37).Opened += this.Flyout_Opened;
                }
                break;
            case 38: // MainWindow.xaml line 476
                {
                    global::Microsoft.UI.Xaml.Controls.Button element38 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element38).Click += this.disconnectFolderButton_Click;
                }
                break;
            case 39: // MainWindow.xaml line 471
                {
                    this.PinnedFolderPathDisplay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 40: // MainWindow.xaml line 472
                {
                    this.CopyPinnedFolderPathButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.CopyPinnedFolderPathButton).Click += this.CopyPinnedFolderPathButton_Click;
                }
                break;
            case 41: // MainWindow.xaml line 461
                {
                    this.RegularFolderPathDisplay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 42: // MainWindow.xaml line 462
                {
                    this.CopyRegularFolderPathButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.CopyRegularFolderPathButton).Click += this.CopyRegularFolderPathButton_Click;
                }
                break;
            case 43: // MainWindow.xaml line 439
                {
                    this.EnableAllOptionsForPinsButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.EnableAllOptionsForPinsButton).Click += this.EnableAllOptionsForPinsButton_Click;
                }
                break;
            case 44: // MainWindow.xaml line 434
                {
                    this.PinsAlwaysOpenRadioButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.PinsAlwaysOpenRadioButton).Checked += this.RadioButton_Checked;
                }
                break;
            case 45: // MainWindow.xaml line 435
                {
                    this.PinsRememberStateRadioButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.PinsRememberStateRadioButton).Checked += this.RadioButton_Checked;
                }
                break;
            case 46: // MainWindow.xaml line 436
                {
                    this.PinsAlwaysClosedRadioButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.PinsAlwaysClosedRadioButton).Checked += this.RadioButton_Checked;
                }
                break;
            case 47: // MainWindow.xaml line 437
                {
                    this.PinsProtectedRadioButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.PinsProtectedRadioButton).Checked += this.RadioButton_Checked;
                }
                break;
            case 48: // MainWindow.xaml line 428
                {
                    this.ApplyMultiFolderSettings = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.ApplyMultiFolderSettings).Click += this.ApplyMultiFolderSettings_Click;
                }
                break;
            case 49: // MainWindow.xaml line 415
                {
                    this.PrimaryPortalFolderCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.PrimaryPortalFolderCheckBox).Checked += this.PrimaryPortalFolderCheckBox_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.PrimaryPortalFolderCheckBox).Unchecked += this.PrimaryPortalFolderCheckBox_Unchecked;
                }
                break;
            case 50: // MainWindow.xaml line 416
                {
                    this.SecondaryPortalFolder1CheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder1CheckBox).Checked += this.SecondaryPortalFolderCheckBox_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder1CheckBox).Unchecked += this.SecondaryPortalFolderCheckBox_Unchecked;
                }
                break;
            case 51: // MainWindow.xaml line 417
                {
                    this.SecondaryPortalFolder2CheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder2CheckBox).Checked += this.SecondaryPortalFolderCheckBox_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder2CheckBox).Unchecked += this.SecondaryPortalFolderCheckBox_Unchecked;
                }
                break;
            case 52: // MainWindow.xaml line 418
                {
                    this.SecondaryPortalFolder3CheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder3CheckBox).Checked += this.SecondaryPortalFolderCheckBox_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder3CheckBox).Unchecked += this.SecondaryPortalFolderCheckBox_Unchecked;
                }
                break;
            case 53: // MainWindow.xaml line 419
                {
                    this.SecondaryPortalFolder4CheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder4CheckBox).Checked += this.SecondaryPortalFolderCheckBox_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder4CheckBox).Unchecked += this.SecondaryPortalFolderCheckBox_Unchecked;
                }
                break;
            case 54: // MainWindow.xaml line 420
                {
                    this.SecondaryPortalFolder5CheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder5CheckBox).Checked += this.SecondaryPortalFolderCheckBox_Checked;
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.SecondaryPortalFolder5CheckBox).Unchecked += this.SecondaryPortalFolderCheckBox_Unchecked;
                }
                break;
            case 55: // MainWindow.xaml line 421
                {
                    this.PrimaryPortalFolderChangeButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.PrimaryPortalFolderChangeButton).Click += this.PrimaryPortalFolderChangeButton_Click;
                }
                break;
            case 56: // MainWindow.xaml line 422
                {
                    this.SecondaryPortalFolder1ChangeButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.SecondaryPortalFolder1ChangeButton).Click += this.SecondaryPortalFolderChangeButton_Click;
                }
                break;
            case 57: // MainWindow.xaml line 423
                {
                    this.SecondaryPortalFolder2ChangeButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.SecondaryPortalFolder2ChangeButton).Click += this.SecondaryPortalFolderChangeButton_Click;
                }
                break;
            case 58: // MainWindow.xaml line 424
                {
                    this.SecondaryPortalFolder3ChangeButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.SecondaryPortalFolder3ChangeButton).Click += this.SecondaryPortalFolderChangeButton_Click;
                }
                break;
            case 59: // MainWindow.xaml line 425
                {
                    this.SecondaryPortalFolder4ChangeButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.SecondaryPortalFolder4ChangeButton).Click += this.SecondaryPortalFolderChangeButton_Click;
                }
                break;
            case 60: // MainWindow.xaml line 426
                {
                    this.SecondaryPortalFolder5ChangeButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.SecondaryPortalFolder5ChangeButton).Click += this.SecondaryPortalFolderChangeButton_Click;
                }
                break;
            case 61: // MainWindow.xaml line 360
                {
                    this.RegularFileCapNumberBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NumberBox)this.RegularFileCapNumberBox).ValueChanged += this.RegularFileCapNumberBox_ValueChanged;
                }
                break;
            case 62: // MainWindow.xaml line 370
                {
                    this.ThumbnailCapNumberBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NumberBox)this.ThumbnailCapNumberBox).ValueChanged += this.ThumbnailCapNumberBox_ValueChanged;
                }
                break;
            case 63: // MainWindow.xaml line 381
                {
                    this.ThumbnailResolutionNumberBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NumberBox)this.ThumbnailResolutionNumberBox).ValueChanged += this.ThumbnailResolutionNumberBox_ValueChanged;
                }
                break;
            case 64: // MainWindow.xaml line 392
                {
                    this.ResetCapsToDefaultButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.ResetCapsToDefaultButton).Click += this.ResetCapsToDefaultButton_Click;
                }
                break;
            case 65: // MainWindow.xaml line 306
                {
                    this.LaunchModePickerComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.LaunchModePickerComboBox).SelectionChanged += this.LaunchModePickerComboBox_SelectionChanged;
                }
                break;
            case 66: // MainWindow.xaml line 315
                {
                    this.SimpleModeWindowingToggle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ToggleSwitch>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ToggleSwitch)this.SimpleModeWindowingToggle).Toggled += this.SimpleModeWindowingToggle_Toggled;
                }
                break;
            case 67: // MainWindow.xaml line 320
                {
                    this.PinToolbarInSimpleModeToggleSwitch = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ToggleSwitch>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ToggleSwitch)this.PinToolbarInSimpleModeToggleSwitch).Toggled += this.PinToolbarInSimpleModeToggleSwitch_Toggled;
                }
                break;
            case 68: // MainWindow.xaml line 325
                {
                    this.CheckBoxBehaviorCombobox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.CheckBoxBehaviorCombobox).SelectionChanged += this.CheckBoxBehaviorCombobox_SelectionChanged;
                }
                break;
            case 69: // MainWindow.xaml line 330
                {
                    this.ThemePickerCombobox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.ThemePickerCombobox).SelectionChanged += this.ThemePickerCombobox_SelectionChanged;
                }
                break;
            case 70: // MainWindow.xaml line 339
                {
                    this.SearchThresholdNumberBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NumberBox)this.SearchThresholdNumberBox).ValueChanged += this.SearchThresholdNumberBox_ValueChanged;
                }
                break;
            case 71: // MainWindow.xaml line 279
                {
                    this.panosUnlockedTimer = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressBar>(target);
                }
                break;
            case 72: // MainWindow.xaml line 272
                {
                    this.failureReminderTimer = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressBar>(target);
                }
                break;
            case 73: // MainWindow.xaml line 266
                {
                    this.reminderTimer = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressBar>(target);
                }
                break;
            case 74: // MainWindow.xaml line 260
                {
                    this.SearchTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)this.SearchTextBox).TextChanged += this.SearchTextBox_TextChanged;
                }
                break;
            case 75: // MainWindow.xaml line 177
                {
                    this.SearchButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.SearchButton).Click += this.SearchButton_Click;
                }
                break;
            case 76: // MainWindow.xaml line 183
                {
                    this.CopyLastSelectedButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.CopyLastSelectedButton).Click += this.CopyLastSelectedButton_Click;
                }
                break;
            case 77: // MainWindow.xaml line 189
                {
                    this.RefreshButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.RefreshButton).Click += this.RefreshButton_Click;
                }
                break;
            case 78: // MainWindow.xaml line 195
                {
                    this.RevealInExplorerButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                }
                break;
            case 79: // MainWindow.xaml line 214
                {
                    this.SelectModeButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.SelectModeButton).Click += this.SelectModeButton_Click;
                }
                break;
            case 80: // MainWindow.xaml line 220
                {
                    this.LaunchSimpleModeButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.LaunchSimpleModeButton).Click += this.LaunchSimpleModeButton_Click;
                }
                break;
            case 81: // MainWindow.xaml line 226
                {
                    this.LaunchMiniModeButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.LaunchMiniModeButton).Click += this.LaunchMiniModeButton_Click;
                }
                break;
            case 82: // MainWindow.xaml line 232
                {
                    this.CopyRecentFileButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.CopyRecentFileButton).Click += this.CopyRecentFileButton_Click;
                }
                break;
            case 83: // MainWindow.xaml line 237
                {
                    this.OpenFileButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.OpenFileButton).Click += this.OpenFileButton_Click;
                }
                break;
            case 84: // MainWindow.xaml line 202
                {
                    this.PrimLinkToExplorerDisplay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)this.PrimLinkToExplorerDisplay).Click += this.RevealInExplorerButton_Click;
                }
                break;
            case 85: // MainWindow.xaml line 204
                {
                    this.Sec1LinkToExplorerDisplay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)this.Sec1LinkToExplorerDisplay).Click += this.RevealInExplorerButton_Click;
                }
                break;
            case 86: // MainWindow.xaml line 205
                {
                    this.Sec2LinkToExplorerDisplay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)this.Sec2LinkToExplorerDisplay).Click += this.RevealInExplorerButton_Click;
                }
                break;
            case 87: // MainWindow.xaml line 206
                {
                    this.Sec3LinkToExplorerDisplay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)this.Sec3LinkToExplorerDisplay).Click += this.RevealInExplorerButton_Click;
                }
                break;
            case 88: // MainWindow.xaml line 207
                {
                    this.Sec4LinkToExplorerDisplay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)this.Sec4LinkToExplorerDisplay).Click += this.RevealInExplorerButton_Click;
                }
                break;
            case 89: // MainWindow.xaml line 208
                {
                    this.Sec5LinkToExplorerDisplay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)this.Sec5LinkToExplorerDisplay).Click += this.RevealInExplorerButton_Click;
                }
                break;
            case 90: // MainWindow.xaml line 210
                {
                    this.PinsLinkToExplorerDisplay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                    ((global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem)this.PinsLinkToExplorerDisplay).Click += this.RevealInExplorerButton_Click;
                }
                break;
            case 91: // MainWindow.xaml line 244
                {
                    this.QuickSettingsButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.QuickSettingsButton).Click += this.QuickSettingsButton_Click;
                }
                break;
            case 92: // MainWindow.xaml line 249
                {
                    this.AboutDropStackButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AppBarButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.AppBarButton)this.AboutDropStackButton).Click += this.AboutDropStackButton_Click;
                }
                break;
            case 93: // MainWindow.xaml line 37
                {
                    this.PinnedExpanderBackgroundRectangle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Rectangle>(target);
                }
                break;
            case 94: // MainWindow.xaml line 38
                {
                    this.PinnedFilesExpander = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Expander>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Expander)this.PinnedFilesExpander).DragOver += this.PinnedPivotSection_DragOver;
                    ((global::Microsoft.UI.Xaml.Controls.Expander)this.PinnedFilesExpander).Drop += this.PinnedPivotSection_Drop;
                    ((global::Microsoft.UI.Xaml.Controls.Expander)this.PinnedFilesExpander).Expanding += this.Expander_Expanding;
                    ((global::Microsoft.UI.Xaml.Controls.Expander)this.PinnedFilesExpander).Collapsed += this.PinnedFilesExpander_Collapsed;
                }
                break;
            case 95: // MainWindow.xaml line 115
                {
                    this.regularFileGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 96: // MainWindow.xaml line 119
                {
                    this.ContentBackgroundRectangle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Rectangle>(target);
                }
                break;
            case 97: // MainWindow.xaml line 120
                {
                    this.PortalFileLoadingProgressBar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressBar>(target);
                }
                break;
            case 98: // MainWindow.xaml line 125
                {
                    this.regularFileListView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ListView)this.regularFileListView).SelectionChanged += this.fileListView_SelectionChanged;
                    ((global::Microsoft.UI.Xaml.Controls.ListView)this.regularFileListView).DoubleTapped += this.regularFileListView_DoubleTapped;
                    ((global::Microsoft.UI.Xaml.Controls.ListView)this.regularFileListView).RightTapped += this.fileListView_RightTapped;
                    ((global::Microsoft.UI.Xaml.Controls.ListView)this.regularFileListView).DragItemsStarting += this.fileListView_DragItemsStarting;
                    ((global::Microsoft.UI.Xaml.Controls.ListView)this.regularFileListView).DragItemsCompleted += this.regularFileListView_DragItemsCompleted;
                }
                break;
            case 103: // MainWindow.xaml line 53
                {
                    this.WinHelloWaitingIndicator = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 104: // MainWindow.xaml line 57
                {
                    this.NoPinnedFilesTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 105: // MainWindow.xaml line 58
                {
                    this.NoPinnedFolderStackpanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 106: // MainWindow.xaml line 62
                {
                    this.pinnedFileGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 107: // MainWindow.xaml line 64
                {
                    this.pinnedFileListView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.GridView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.pinnedFileListView).SelectionChanged += this.fileListView_SelectionChanged;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.pinnedFileListView).DoubleTapped += this.regularFileListView_DoubleTapped;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.pinnedFileListView).RightTapped += this.fileListView_RightTapped;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.pinnedFileListView).DragItemsStarting += this.fileListView_DragItemsStarting;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.pinnedFileListView).DragItemsCompleted += this.pinnedFileListView_DragItemsCompleted;
                }
                break;
            case 113: // MainWindow.xaml line 87
                {
                    global::Microsoft.UI.Xaml.Controls.Button element113 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element113).Click += this.DeletePinnedItemConfirmationButton_Click;
                }
                break;
            case 114: // MainWindow.xaml line 59
                {
                    this.NoPinnedFolderTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 115: // MainWindow.xaml line 60
                {
                    this.PickPinnedFolderHyperlinkButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.HyperlinkButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.HyperlinkButton)this.PickPinnedFolderHyperlinkButton).Click += this.PickPinnedFolderHyperlinkButton_Click;
                }
                break;
            case 116: // MainWindow.xaml line 54
                {
                    this.WinHelloProgressRing = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ProgressRing>(target);
                }
                break;
            case 117: // MainWindow.xaml line 19
                {
                    this.ParallaxImage = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2307")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MainWindow.xaml line 2
                {                    
                    global::WinUIEx.WindowEx element1 = (global::WinUIEx.WindowEx)target;
                    MainWindow_obj1_Bindings bindings = new MainWindow_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Activated += bindings.Activated;
                }
                break;
            }
            return returnValue;
        }
    }
}

